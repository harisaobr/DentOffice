// <auto-generated />
using System;
using DentOffice.WebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DentOffice.WebAPI.Migrations
{
    [DbContext(typeof(eDentOfficeContext))]
    [Migration("20210831141817_KorisnikSpol")]
    partial class KorisnikSpol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Croatian_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DentOffice.WebAPI.Database.CreditCard", b =>
                {
                    b.Property<int>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CreditCardID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.HasKey("CreditCardId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Dijagnoza", b =>
                {
                    b.Property<int>("DijagnozaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DijagnozaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Napomena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DijagnozaId");

                    b.ToTable("Dijagnoza");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DrzavaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DrzavaId")
                        .HasColumnType("int")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("GradID");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("JMBG");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("image");

                    b.Property<int>("Spol")
                        .HasColumnType("int");

                    b.Property<int?>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnikId");

                    b.HasIndex("GradId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Lijek", b =>
                {
                    b.Property<int>("LijekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LijekID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LijekId");

                    b.ToTable("Lijek");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.MedicinskiKarton", b =>
                {
                    b.Property<int>("MedicinskiKartonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MedicinskiKartonID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<int?>("PregledId")
                        .HasColumnType("int")
                        .HasColumnName("PregledID");

                    b.HasKey("MedicinskiKartonId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("PregledId");

                    b.ToTable("MedicinskiKarton");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Pacijent", b =>
                {
                    b.Property<int>("PacijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PacijentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aparatic")
                        .HasColumnType("bit");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<bool?>("Proteza")
                        .HasColumnType("bit");

                    b.Property<bool?>("Terapija")
                        .HasColumnType("bit");

                    b.HasKey("PacijentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Pacijent");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreditCardId")
                        .HasColumnType("int")
                        .HasColumnName("CreditCardID");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<string>("Metoda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("CreditCardId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Pregled", b =>
                {
                    b.Property<int>("PregledId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PregledID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<int?>("DijagnozaId")
                        .HasColumnType("int")
                        .HasColumnName("DijagnozaID");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("LijekId")
                        .HasColumnType("int")
                        .HasColumnName("LijekID");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TerminId")
                        .HasColumnType("int")
                        .HasColumnName("TerminID");

                    b.Property<int?>("TrajanjePregleda")
                        .HasColumnType("int");

                    b.HasKey("PregledId");

                    b.HasIndex("DijagnozaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("LijekId");

                    b.HasIndex("TerminId");

                    b.ToTable("Pregled");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RacunID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzdavanjaRacuna")
                        .HasColumnType("date");

                    b.Property<bool?>("IsPlaceno")
                        .HasColumnType("bit");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("PregledId")
                        .HasColumnType("int")
                        .HasColumnName("PregledID");

                    b.Property<double?>("UkupnaCijena")
                        .HasColumnType("float");

                    b.HasKey("RacunId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PregledId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerminID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("date");

                    b.Property<bool?>("Hitno")
                        .HasColumnType("bit");

                    b.Property<bool>("Odobreno")
                        .HasColumnType("bit");

                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("PacijentID");

                    b.Property<string>("Razlog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int")
                        .HasColumnName("UslugaID");

                    b.HasKey("TerminId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UlogaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Usluga", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UslugaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UslugaId");

                    b.ToTable("Usluga");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.CreditCard", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("CreditCards")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__CreditCar__Koris__38996AB5")
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Grad", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Grads")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK__Grad__DrzavaID__286302EC");

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Korisnik", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Grad", "Grad")
                        .WithMany("Korisniks")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Korisnik__GradID__34C8D9D1");

                    b.HasOne("DentOffice.WebAPI.Database.Uloga", "Uloga")
                        .WithMany("Korisniks")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__Korisnik__UlogaI__35BCFE0A");

                    b.Navigation("Grad");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.MedicinskiKarton", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Pacijent", "Pacijent")
                        .WithMany("MedicinskiKartons")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK__Medicinsk__Pacij__5812160E");

                    b.HasOne("DentOffice.WebAPI.Database.Pregled", "Pregled")
                        .WithMany("MedicinskiKartons")
                        .HasForeignKey("PregledId")
                        .HasConstraintName("FK__Medicinsk__Pregl__59063A47");

                    b.Navigation("Pacijent");

                    b.Navigation("Pregled");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Pacijent", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Pacijents")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Pacijent__Korisn__3E52440B");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Payment", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.CreditCard", "CreditCard")
                        .WithMany("Payments")
                        .HasForeignKey("CreditCardId")
                        .HasConstraintName("FK__Payment__CreditC__44FF419A");

                    b.Navigation("CreditCard");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Pregled", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Dijagnoza", "Dijagnoza")
                        .WithMany("Pregleds")
                        .HasForeignKey("DijagnozaId")
                        .HasConstraintName("FK__Pregled__Dijagno__4E88ABD4");

                    b.HasOne("DentOffice.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Pregleds")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Pregled__Korisni__4BAC3F29");

                    b.HasOne("DentOffice.WebAPI.Database.Lijek", "Lijek")
                        .WithMany("Pregleds")
                        .HasForeignKey("LijekId")
                        .HasConstraintName("FK__Pregled__LijekID__4CA06362");

                    b.HasOne("DentOffice.WebAPI.Database.Termin", "Termin")
                        .WithMany("Pregleds")
                        .HasForeignKey("TerminId")
                        .HasConstraintName("FK__Pregled__TerminI__4D94879B");

                    b.Navigation("Dijagnoza");

                    b.Navigation("Korisnik");

                    b.Navigation("Lijek");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Racun", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Racuns")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Racun__KorisnikI__6FE99F9F");

                    b.HasOne("DentOffice.WebAPI.Database.Pregled", "Pregled")
                        .WithMany("Racuns")
                        .HasForeignKey("PregledId")
                        .HasConstraintName("FK__Racun__PregledID__70DDC3D8");

                    b.Navigation("Korisnik");

                    b.Navigation("Pregled");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Termin", b =>
                {
                    b.HasOne("DentOffice.WebAPI.Database.Pacijent", "Pacijent")
                        .WithMany("Termins")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK__Termin__Pacijent__47DBAE45")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentOffice.WebAPI.Database.Usluga", "Usluga")
                        .WithMany("Termins")
                        .HasForeignKey("UslugaId")
                        .HasConstraintName("FK__Termin__UslugaID__48CFD27E")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacijent");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.CreditCard", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Dijagnoza", b =>
                {
                    b.Navigation("Pregleds");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Drzava", b =>
                {
                    b.Navigation("Grads");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Grad", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Korisnik", b =>
                {
                    b.Navigation("CreditCards");

                    b.Navigation("Pacijents");

                    b.Navigation("Pregleds");

                    b.Navigation("Racuns");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Lijek", b =>
                {
                    b.Navigation("Pregleds");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Pacijent", b =>
                {
                    b.Navigation("MedicinskiKartons");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Pregled", b =>
                {
                    b.Navigation("MedicinskiKartons");

                    b.Navigation("Racuns");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Termin", b =>
                {
                    b.Navigation("Pregleds");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Uloga", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("DentOffice.WebAPI.Database.Usluga", b =>
                {
                    b.Navigation("Termins");
                });
#pragma warning restore 612, 618
        }
    }
}
